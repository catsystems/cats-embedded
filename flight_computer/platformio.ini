# Copyright (C) 2020, 2024 Control and Telemetry Systems GmbH
#
# SPDX-License-Identifier: GPL-3.0-or-later

[platformio]
default_envs = release

[env]
platform = ststm32
board = genericSTM32F411CE
#framework = stm32cube
platform_packages = platformio/toolchain-gccarmnoneeabi@^1.100301.220327
upload_protocol = stlink
debug_tool = stlink
board_build.ldscript = src/target/VEGA/STM32F411CCUX_FLASH.ld

# Currently we have to include all source files from the lib directory due to the
# "non-standard" layout of the libraries we are using. This can be removed once
# we replace STM, FreeRTOS & CMSIS libraries with platformio packages.
build_src_filter =
  +<*>
  +<../lib/**/*.c>
  +<../lib/**/*.cpp>

extra_scripts =
  pre:pre_config.py

check_tool = clangtidy
check_flags =
  clangtidy: --config-file=../.clang-tidy
check_src_filters =
  -<lib/>
  +<src/>
  -<src/target/VEGA/stm*>
  -<src/target/VEGA/system_stm*>
  -<src/syscalls.c>
  -<src/sysmem.c>

build_unflags=-fno-rtti

build_flags =
  -D FIRMWARE_VERSION='"3.0.2-pre"'
  -D ARM_MATH_CM4
  -D ARM_MATH_MATRIX_CHECK
  -D ARM_MATH_ROUNDING
  -D USE_HAL_DRIVER
  -D STM32F411xE

  -I lib/STM/STM32F4/STM32F4xx_HAL_Driver/Inc
  -I lib/STM/STM32F4/STM32F4xx_HAL_Driver/Inc/Legacy
  -I lib/STM/STM32F4/STM32F4xx/Include
  -I lib/STM/STM32F4/USB_DEVICE

  -I lib/FreeRTOS/Source/CMSIS_RTOS_V2
  -I lib/FreeRTOS/Source/include
  -I lib/FreeRTOS/Source/portable/GCC/ARM_CM4F
  -I lib/FreeRTOS/Source/portable/GCC/MemMang

  -I lib/CMSIS/Include
  -I lib/CMSIS/DSP/Inc

  -I src
  -I src/drivers/usb
  -I src/target/VEGA

  -Llib/CMSIS/DSP/lib
  -llibarm_cortexM4lf_math.a

[env:release]
build_flags = 
  ${env.build_flags}
  #-D CATS_DEV

[env:debug]
build_type=debug
debug_build_flags =
  -O0
  -ggdb3
  -g3
  -D CATS_DEV
